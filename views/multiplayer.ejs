<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css"
        integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
    <link href="/style.css" rel="stylesheet">
    <link href="/main.css" rel="stylesheet">
    <link href="/ranking.css" rel="stylesheet">
    <link href="/multiplayer.css" rel="stylesheet">
</head>

<body>

    <nav>
        <h4>Memory card game</h4>
        <% if (user) { %>
            <ul>
                Logged in as <%= user.username %>
                    <li>
                    <li><a href="/levelChoice">Game</a></li>
                    <li>
                    </li>
                    <a href="/auth/wyloguj" style="color:crimson">Log out</a>
            </ul>
            <% } else { %>
                <ul>
                    <li><a href="/logowanie">Sign in</a></li>
                    <li><a href="/rejestracja">Register</a></li>
                </ul>
                <% } %>
    </nav>

    <% if (!room) { %>
        <div id="createRoom">
            <div class="form-group">
                <button id="cr-btn" class="btn btn-primary">Create room</button>
                <input type="text" id="roomName" name="roomName" placeholder="Room name">
            </div>
        </div>

        <div id="wholeLobby">
            <!-- wczytywanie pokoi -->

        </div>

        <%} else { %>
            <!-- Pokój do 4 osób z czatem i przyciskiem start/wyjdz-->
            <div classs="playersDiv">
                <p id='room_name'></p>



            </div>
            <!-- chat -->






            <div class="roomConteiner">

                <div class="chat">
                    <div class="chatMessages">
                        <ul id="messages"></ul>
                    </div>
                    <div class="chatSend">
                        <form id="chatForm" action="">
                            <input id="chatInput" autocomplete="off" /><button>Send</button>
                        </form>
                    </div>
                </div>
                <div class="rightMenu">
                    <div class="players">
                        <div class="player">
                            <div class="playerNumber">
                                P1
                            </div>
                            <div id='player1' class="playerName">

                            </div>


                        </div>
                        <div class="player">
                            <div class="playerNumber">
                                P2
                            </div>
                            <div id='player2' class="playerName">

                            </div>

                        </div>
                        <div class="player">
                            <div class="playerNumber">
                                P3
                            </div>
                            <div id='player3' class="playerName">

                            </div>
                        </div>
                        <div class="player">
                            <div class="playerNumber">
                                P4
                            </div>
                            <div id='player4' class="playerName">

                            </div>
                        </div>
                    </div>
                    <div id="startLeave">

                        <button id="leave-btn">Leave</button>
                    </div>

                </div>
            </div>
            <% } %>


                <!-- jQuery first, then Tether, then Bootstrap JS. -->
                <script src="https://code.jquery.com/jquery-3.1.1.slim.min.js"
                    integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n"
                    crossorigin="anonymous"></script>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js"
                    integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb"
                    crossorigin="anonymous"></script>
                <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js"
                    integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn"
                    crossorigin="anonymous"></script>
</body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script>
<script src="../utils.js"></script>
<script>
    //funckja do buttona join room
    async function fetchJoinRoom(roomInfo) {
        let response = await fetch('/auth/joinRoom', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(roomInfo)
        });
        return response.json()
    }

    //socket server
    let socket = io()
    socket.on('connect', function (data) {
        if (room && room != null) {
            socket.emit('roomSetup', { room_id: room })
        }
        else {
            socket.emit('lobbySetup')
        }
    });
    socket.on('disconnect', function (data) {

    });


    //=========================================================================================LOBBY=======================================================================================================
    let rooms = '<%- JSON.stringify(rooms) %>';
    rooms = JSON.parse(rooms)

    //sprawdzamy czy uzytkownik jest w lobby
    if (rooms && rooms != 'null') {
        //create room button
        let crBtn = document.getElementById('cr-btn');
        crBtn.addEventListener("click", async (event) => {
            let roomName = { roomName: document.getElementById('roomName').value };
            let response = await fetch('/auth/createRoom', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(roomName)
            });
            const resData = await response.json();
            if (resData.status != 'success') {
                window.location.replace('/multiplayer')
            }
            else {
                socket.emit('joinRoom', { jwt: getCookie('jwt'), room_id: resData.room_id })
                window.location.replace('/multiplayer/' + resData.room_id);
            }
        })

        //aktualizujemy pokoje po otrzymaniu brodcasta
        socket.on('lobbyChange', function (data) {
            let wholeLobby = document.getElementById("wholeLobby")
            while (wholeLobby.firstChild) {
                wholeLobby.removeChild(wholeLobby.firstChild)
            }
            console.log('lobbyChange', data)
            for (let i = 0; i < data.length; i++) {
                let roomContainer = document.createElement("div")
                roomContainer.className = "roomContainer"
                roomContainer.id = "roomContainer" + [i]
                wholeLobby.appendChild(roomContainer)
                let roomHeader = document.createElement("div")
                roomHeader.className = "roomHeader"
                roomHeader.id = "roomHeader" + [i]
                roomContainer.appendChild(roomHeader)

                let btn = document.createElement("button");

                let nazwaPokoju = document.createElement("div");
                let gracze = document.createElement("div")
                btn.id = "join";
                btn.dataset.room_id = data[i]._id;
                btn.dataset.player_amount = data[i].player_amount;
                btn.innerText = "join"
                nazwaPokoju.id = "nazwaPokoju";
                nazwaPokoju.innerText = "Room: " + data[i].room_name;
                gracze.id = "gracze";
                gracze.innerText = "Players: " + data[i].player_amount + "/4";
                document.getElementById("roomHeader" + [i]).appendChild(nazwaPokoju);
                document.getElementById("roomHeader" + [i]).appendChild(gracze);
                document.getElementById("roomContainer" + [i]).appendChild(btn);
                btn.addEventListener("click", async (event) => {
                    let roomInfo = { "roomId": btn.dataset.room_id, "playerAmount": btn.dataset.player_amount };
                    const resData = await fetchJoinRoom(roomInfo);
                    if (resData.status != 'success') {
                        window.location.replace('/multiplayer')
                    }
                    else {
                        socket.emit('joinRoom', { jwt: getCookie('jwt'), room_id: roomInfo.roomId })
                        window.location.replace('/multiplayer/' + resData.room_id);
                    }
                })
            }
        })

        //tworzymy pokoje i join-btns

        let wholeLobby = document.getElementById("wholeLobby")
        for (let i = 0; i < rooms.length; i++) {
            let roomContainer = document.createElement("div")
            roomContainer.className = "roomContainer"
            roomContainer.id = "roomContainer" + [i]
            wholeLobby.appendChild(roomContainer)
            let roomHeader = document.createElement("div")
            roomHeader.className = "roomHeader"
            roomHeader.id = "roomHeader" + [i]
            roomContainer.appendChild(roomHeader)
            let hr = document.createElement("hr")
            hr.id = "hr"
            let btn = document.createElement("button");
            let nazwaPokoju = document.createElement("div");
            let gracze = document.createElement("div")
            btn.id = "join";
            btn.dataset.room_id = rooms[i]._id;
            btn.dataset.player_amount = rooms[i].player_amount;
            btn.innerText = "join"
            nazwaPokoju.id = "nazwaPokoju";
            nazwaPokoju.innerText = "Room: " + rooms[i].room_name;
            gracze.id = "gracze";
            gracze.innerText = "Players: " + rooms[i].player_amount + "/4";
            document.getElementById("roomHeader" + [i]).appendChild(nazwaPokoju);
            document.getElementById("roomHeader" + [i]).appendChild(gracze);
            document.getElementById("roomContainer" + [i]).appendChild(btn);
            document.getElementById("roomContainer" + [i]).appendChild(hr);

            btn.addEventListener("click", async (event) => {
                let roomInfo = { "roomId": btn.dataset.room_id, "playerAmount": btn.dataset.player_amount };
                const resData = await fetchJoinRoom(roomInfo);
                if (resData.status != 'success') {
                    window.location.replace('/multiplayer')
                }
                else {
                    socket.emit('joinRoom', { jwt: getCookie('jwt'), room_id: roomInfo.roomId })
                    window.location.replace('/multiplayer/' + resData.room_id);
                }
            })
        }
    }

    //==========================================================================================POJEDYNCZE POKOJE=====================================================================================
    let room = '<%- room %>';        //id pokoju
    let players = '<%- JSON.stringify(players) %>';  //gracze w pokoju
    players = JSON.parse(players);
    let user = '<%- user.username %>'; //username zalogowanego uzytkownika
    let user_id = '<%- user.id %>'    //id zalogowanego uzytkownika
    let player_amount = '<%- player_amount %>'; //ilosc graczy w pokoju
    //multiplayer/room_id?= 
    //sprawdzamy czy uzytkownik znadjuje sie w pokoju
    if (room && room != 'null') {
        //socket dostaje informacje o zmianie w pokoju
        socket.on('joinRoom', data => {
            console.log('joinRoom', data)
            //aktualizacja graczy w pokoju po otrzymaniu 
            for (let i = 1; i < 5; i++) {
                let x = document.getElementById('player' + i);
                if (data['player' + i]) {
                    if (data['player' + i]._id == data.leader) {
                        x.innerHTML = data['player' + i].username + ' LIDER'
                        //dodac korone czy cos by bylo wiadomo ze jest zalozycielem
                    }
                    else {
                        x.innerHTML = data['player' + i].username;
                    }
                }
                else {
                    x.innerHTML = null;
                }
            }

            //sprawdzamy czy zalogowany uzytkownik jest liderem pokoju i czy znajduje sie na jego ekranie button start, jezeli nie - dodajemy
            if (user_id == data.leader && !document.body.contains(document.getElementById('buttonStart'))) {
                let startLeave = document.getElementById("startLeave")
                let buttonStart = document.createElement("button")
                let leaveButton = document.getElementById("leave-btn")
                buttonStart.id = "buttonStart"
                buttonStart.innerText = "Start"
                startLeave.insertBefore(buttonStart, leaveButton)
            }
        })


        //chat setup
        let form = document.getElementById('chatForm');
        let input = document.getElementById('chatInput');
        let messages = document.getElementById('messages');

        form.addEventListener('submit', function (e) {
            e.preventDefault();
            if (input.value) {
                let chatInput = { value: input.value, room_id: room, user: user }
                socket.emit('newChatMessage', JSON.stringify(chatInput));
                input.value = '';
            }
        });

        //socket otrzymuje informacje o nowej wiadomosci wyslanej w pokoju => dodaje ją do czatu
        socket.on('newChatMessage', function (msg) {
            let item = document.createElement('li');
            item.textContent = msg.user + ": " + msg.value;
            messages.appendChild(item);
            window.scrollTo(0, document.body.scrollHeight);
        });



        //gracze w pokoju

        //START BUTTON jezeli user jest leaderem
        if (user_id == players.leader) {
            let startLeave = document.getElementById("startLeave")
            let buttonStart = document.createElement("button")
            let leaveButton = document.getElementById("leave-btn")
            buttonStart.id = "buttonStart"
            buttonStart.innerText = "Start"
            startLeave.insertBefore(buttonStart, leaveButton)
        }

        //nazwa pokoju
        document.getElementById('room_name').innerHTML = "Room name: " + players.room_name;
        //zaladowanie graczy
        for (let i = 1; i < 5; i++) {
            let x = document.getElementById('player' + i);
            if (players['player' + i]) {
                if (players['player' + i]._id == players.leader) {
                    x.innerHTML = players['player' + i].username + ' LIDER'
                    //dodac korone czy cos by bylo wiadomo ze jest zalozycielem
                }
                else {
                    x.innerHTML = players['player' + i].username;
                }
            }
        }

        //przycisk leave
        let leave = document.getElementById('leave-btn');
        leave.addEventListener("click", async (event) => {
            let leaveInfo = { "room": room }
            let res = await fetch('/auth/leaveRoom', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(leaveInfo)
            });
            socket.emit('leaveRoom', { jwt: getCookie('jwt'), room_id: room })
            window.location.replace('/multiplayer')
        })
    }

</script>

</html>